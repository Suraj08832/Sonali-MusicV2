# =======================================================
# ¬©Ô∏è 2025-26 All Rights Reserved by Purvi Bots (Im-Notcoder) üöÄ

# This source code is under MIT License üìú Unauthorized forking, importing, or using this code without giving proper credit will result in legal action ‚ö†Ô∏è
 
# üì© DM for permission : @TheSigmaCoder
# =======================================================

from asyncio import sleep
from pyrogram import filters
from pyrogram.enums import ChatType
from pyrogram.errors import MessageDeleteForbidden, RPCError
from pyrogram.types import Message
from SONALI_MUSIC.utils.Sona_BAN import admin_filter
from SONALI_MUSIC import app


@app.on_message(filters.command("purge") & admin_filter)
async def purge(app: app, msg: Message):
    
    if msg.chat.type != ChatType.SUPERGROUP:
        await msg.reply_text(text="**‚ãü …™ ·¥Ñ·¥Ä…¥'·¥õ ·¥ò·¥ú Ä…¢·¥á ·¥ç·¥áss·¥Ä…¢·¥ás …™…¥ ·¥Ä  ô·¥Äs…™·¥Ñ …¢ Ä·¥è·¥ú·¥ò ·¥ç·¥Ä·¥ã·¥á s·¥ú·¥ò·¥á Ä …¢ Ä·¥è·¥ú·¥ò.**")
        return

    if msg.reply_to_message:
        message_ids = list(range(msg.reply_to_message.id, msg.id))

        def divide_chunks(l: list, n: int = 100):
            for i in range(0, len(l), n):
                yield l[i : i + n]

        m_list = list(divide_chunks(message_ids))

        try:
            for plist in m_list:
                await app.delete_messages(chat_id=msg.chat.id, message_ids=plist, revoke=True)
                
            await msg.delete()
        except MessageDeleteForbidden:
            await msg.reply_text(text="**‚ãü …™ ·¥Ñ·¥Ä…¥'·¥õ ·¥Ö·¥á ü·¥á·¥õ·¥á ·¥Ä ü ü ·¥ç·¥áss·¥Ä…¢·¥ás. ·¥ç·¥Ä è  ô·¥á ·¥õ·¥è·¥è ·¥è ü·¥Ö, …™ ·¥ç…™…¢ ú·¥õ …¥·¥è·¥õ  ú·¥Ä·¥†·¥á ·¥Ö·¥á ü·¥á·¥õ·¥á  Ä…™…¢ ú·¥õs, ·¥è Ä …¥·¥è·¥õ ·¥Ä s·¥ú·¥ò·¥á Ä…¢ Ä·¥è·¥ú·¥ò.**")
            return
            
        except RPCError as ef:
            await msg.reply_text(text=f"**‚ãü s·¥è·¥ç·¥á ·¥á Ä Ä·¥è Ä ·¥è·¥Ñ·¥Ñ·¥ú Ä Ä·¥á·¥Ö,  Ä·¥á·¥ò·¥è Ä·¥õ …™·¥õ ·¥ús…™…¥…¢** `/bug` **·¥á Ä Ä·¥è Ä :-** `{ef}`")
        
        count_del_msg = len(message_ids)
        sumit = await msg.reply_text(text=f"**‚ãü ·¥Ö·¥á ü·¥á·¥õ·¥á·¥Ö** <i>{count_del_msg}</i> **·¥ç·¥áss·¥Ä…¢·¥ás**")
        await sleep(3)
        await sumit.delete()
        return
    await msg.reply_text("**‚ãü  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è s·¥õ·¥Ä Ä·¥õ ·¥ò·¥ú Ä…¢·¥á.**")
    return


@app.on_message(filters.command("spurge") & admin_filter)
async def spurge(app: app, msg: Message):

    if msg.chat.type != ChatType.SUPERGROUP:
        await msg.reply_text(text="**‚ãü …™ ·¥Ñ·¥Ä…¥'·¥õ ·¥ò·¥ú Ä…¢·¥á ·¥ç·¥áss·¥Ä…¢·¥ás …™…¥ ·¥Ä  ô·¥Äs…™·¥Ñ …¢ Ä·¥è·¥ú·¥ò ·¥ç·¥Ä·¥ã·¥á s·¥ú·¥ò·¥á Ä …¢ Ä·¥è·¥ú·¥ò.**")
        return

    if msg.reply_to_message:
        message_ids = list(range(msg.reply_to_message.id, msg.id))

        def divide_chunks(l: list, n: int = 100):
            for i in range(0, len(l), n):
                yield l[i : i + n]

        m_list = list(divide_chunks(message_ids))

        try:
            for plist in m_list:
                await app.delete_messages(chat_id=msg.chat.id, message_ids=plist, revoke=True)
            await msg.delete()
        except MessageDeleteForbidden:
            await msg.reply_text(text="**‚ãü …™ ·¥Ñ·¥Ä…¥'·¥õ ·¥Ö·¥á ü·¥á·¥õ·¥á ·¥Ä ü ü ·¥ç·¥áss·¥Ä…¢·¥ás. ·¥ç·¥Ä è  ô·¥á ·¥õ·¥è·¥è ·¥è ü·¥Ö, …™ ·¥ç…™…¢ ú·¥õ …¥·¥è·¥õ  ú·¥Ä·¥†·¥á ·¥Ö·¥á ü·¥á·¥õ·¥á  Ä…™…¢ ú·¥õs, ·¥è Ä …¥·¥è·¥õ ·¥Ä s·¥ú·¥ò·¥á Ä…¢ Ä·¥è·¥ú·¥ò.**")
            return
            
        except RPCError as ef:
            await msg.reply_text(text=f"**‚ãü s·¥è·¥ç·¥á ·¥á Ä Ä·¥è Ä ·¥è·¥Ñ·¥Ñ·¥ú Ä Ä·¥á·¥Ö,  Ä·¥á·¥ò·¥è Ä·¥õ …™·¥õ ·¥ús…™…¥…¢** `/bug` **·¥á Ä Ä·¥è Ä :-** <code>{ef}</code>")           
            return        
    await msg.reply_text("**‚ãü  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è s·¥õ·¥Ä Ä·¥õ ·¥ò·¥ú Ä…¢·¥á.**")
    return


@app.on_message(filters.command("del") & admin_filter)
async def del_msg(app: app, msg: Message):
    if msg.chat.type != ChatType.SUPERGROUP:
        await msg.reply_text(text="**‚ãü …™ ·¥Ñ·¥Ä…¥'·¥õ ·¥ò·¥ú Ä…¢·¥á ·¥ç·¥áss·¥Ä…¢·¥ás …™…¥ ·¥Ä  ô·¥Äs…™·¥Ñ …¢ Ä·¥è·¥ú·¥ò ·¥ç·¥Ä·¥ã·¥á s·¥ú·¥ò·¥á Ä …¢ Ä·¥è·¥ú·¥ò.**")
        return        
    if msg.reply_to_message:
        await msg.delete()
        await app.delete_messages(chat_id=msg.chat.id, message_ids=msg.reply_to_message.id)
    else:
        await msg.reply_text(text="**‚ãü ·¥° ú·¥Ä·¥õ ·¥Ö·¥è  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥á.**")
        return

# ======================================================
# ¬©Ô∏è 2025-26 All Rights Reserved by Purvi Bots (Im-Notcoder) üòé

# üßë‚Äçüíª Developer : t.me/TheSigmaCoder
# üîó Source link : GitHub.com/Im-Notcoder/Sonali-MusicV2
# üì¢ Telegram channel : t.me/Purvi_Bots
# =======================================================
