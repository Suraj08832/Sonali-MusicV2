# =======================================================
# ¬©Ô∏è 2025-26 All Rights Reserved by Purvi Bots (Im-Notcoder) üöÄ

# This source code is under MIT License üìú Unauthorized forking, importing, or using this code without giving proper credit will result in legal action ‚ö†Ô∏è
 
# üì© DM for permission : @TheSigmaCoder
# =======================================================

from pyrogram import Client, filters
import requests
from SONALI_MUSIC import app

def chunk_string(text, chunk_size):
    return [text[i:i + chunk_size] for i in range(0, len(text), chunk_size)]

@app.on_message(filters.command("allrepo"))
async def all_repo_command(client, message):
    try:
        
        if len(message.command) > 1:
            github_username = message.command[1]
            
            repo_info = get_all_repository_info(github_username)
            
            chunked_repo_info = chunk_string(repo_info, 4000)  
         
            for chunk in chunked_repo_info:
                await message.reply_text(chunk)
        else:
            await message.reply_text("**·¥ò ü·¥á·¥Äs·¥á ·¥á…¥·¥õ·¥á Ä ·¥Ä …¢…™·¥õ ú·¥ú ô ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á ·¥Ä“ì·¥õ·¥á Ä ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.**")
    except Exception as e:
        await message.reply_text(f"**·¥Ä…¥ ·¥á Ä Ä·¥è Ä ·¥è·¥Ñ·¥Ñ·¥ú Ä Ä·¥ú·¥Ö :-** {str(e)}")

def get_all_repository_info(github_username):
    github_api_url = f"https://api.github.com/users/{github_username}/repos"

    response = requests.get(github_api_url)
    data = response.json()

    repo_info = "\n\n".join([
        f"** Ä·¥á·¥ò·¥ès…™·¥õ·¥è Ä è :-** {repo['full_name']}\n"
        f"**·¥Ö·¥ás·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥ :-** {repo['description']}\n"
        f"**s·¥õ·¥Ä Äs :-** {repo['stargazers_count']}\n"
        f"**“ì·¥è Ä·¥ãs :-** {repo['forks_count']}\n"
        f"** Ä·¥á·¥ò·¥è ·¥ú Ä ü :-** {repo['html_url']}"
        for repo in data
    ])

    return repo_info

# ======================================================
# ¬©Ô∏è 2025-26 All Rights Reserved by Purvi Bots (Im-Notcoder) üòé

# üßë‚Äçüíª Developer : t.me/TheSigmaCoder
# üîó Source link : GitHub.com/Im-Notcoder/Sonali-MusicV2
# üì¢ Telegram channel : t.me/Purvi_Bots
# =======================================================
